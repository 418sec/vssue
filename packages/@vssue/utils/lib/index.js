import queryString from 'query-string';
import format from 'date-fns/format';
export var buildURL = function (cleanURL, params) {
    var query = queryString.stringify(params);
    query = query === '' ? '' : "?" + query;
    return "" + cleanURL + query;
};
export var concatURL = function (baseURL, path) {
    var firstPart = baseURL.replace(/\/$/, '');
    var secondPart = path.replace(/^\//, '');
    return firstPart + "/" + secondPart;
};
export var getCleanURL = function (fullURL) {
    if (fullURL === void 0) { fullURL = window.location.href; }
    var cleanURL = queryString.parseUrl(fullURL).url;
    return cleanURL;
};
export var parseQuery = function (URL) { return queryString.parse(URL); };
export var buildQuery = function (params) { return queryString.stringify(params); };
export var formatDateTime = function (str) {
    var dateTime = format(str, 'YYYY-MM-DD HH:mm:ss');
    return dateTime;
};
export var noop = function () { };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxXQUE2QixNQUFNLGNBQWMsQ0FBQTtBQUN4RCxPQUFPLE1BQU0sTUFBTSxpQkFBaUIsQ0FBQTtBQUVwQyxNQUFNLENBQUMsSUFBTSxRQUFRLEdBQUcsVUFBQyxRQUFnQixFQUFFLE1BQWM7SUFDdkQsSUFBSSxLQUFLLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUN6QyxLQUFLLEdBQUcsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFJLEtBQU8sQ0FBQTtJQUN2QyxPQUFPLEtBQUcsUUFBUSxHQUFHLEtBQU8sQ0FBQTtBQUM5QixDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBQyxPQUFlLEVBQUUsSUFBWTtJQUNyRCxJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUMxQyxJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUN4QyxPQUFVLFNBQVMsU0FBSSxVQUFZLENBQUE7QUFDckMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHLFVBQUMsT0FBc0M7SUFBdEMsd0JBQUEsRUFBQSxVQUFrQixNQUFNLENBQUMsUUFBUSxDQUFDLElBQUk7SUFDaEUsSUFBTSxRQUFRLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUE7SUFDbEQsT0FBTyxRQUFRLENBQUE7QUFDakIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLElBQU0sVUFBVSxHQUFHLFVBQUMsR0FBVyxJQUFtQixPQUFBLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQXRCLENBQXNCLENBQUE7QUFFL0UsTUFBTSxDQUFDLElBQU0sVUFBVSxHQUFHLFVBQUMsTUFBYyxJQUFhLE9BQUEsV0FBVyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBN0IsQ0FBNkIsQ0FBQTtBQUVuRixNQUFNLENBQUMsSUFBTSxjQUFjLEdBQUcsVUFBQyxHQUFXO0lBQ3hDLElBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxHQUFHLEVBQUUscUJBQXFCLENBQUMsQ0FBQTtJQUNuRCxPQUFPLFFBQVEsQ0FBQTtBQUNqQixDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsSUFBTSxJQUFJLEdBQUcsY0FBTyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcXVlcnlTdHJpbmcsIHsgT3V0cHV0UGFyYW1zIH0gZnJvbSAncXVlcnktc3RyaW5nJ1xuaW1wb3J0IGZvcm1hdCBmcm9tICdkYXRlLWZucy9mb3JtYXQnXG5cbmV4cG9ydCBjb25zdCBidWlsZFVSTCA9IChjbGVhblVSTDogc3RyaW5nLCBwYXJhbXM6IE9iamVjdCk6IHN0cmluZyA9PiB7XG4gIGxldCBxdWVyeSA9IHF1ZXJ5U3RyaW5nLnN0cmluZ2lmeShwYXJhbXMpXG4gIHF1ZXJ5ID0gcXVlcnkgPT09ICcnID8gJycgOiBgPyR7cXVlcnl9YFxuICByZXR1cm4gYCR7Y2xlYW5VUkx9JHtxdWVyeX1gXG59XG5cbmV4cG9ydCBjb25zdCBjb25jYXRVUkwgPSAoYmFzZVVSTDogc3RyaW5nLCBwYXRoOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICBsZXQgZmlyc3RQYXJ0ID0gYmFzZVVSTC5yZXBsYWNlKC9cXC8kLywgJycpXG4gIGxldCBzZWNvbmRQYXJ0ID0gcGF0aC5yZXBsYWNlKC9eXFwvLywgJycpXG4gIHJldHVybiBgJHtmaXJzdFBhcnR9LyR7c2Vjb25kUGFydH1gXG59XG5cbmV4cG9ydCBjb25zdCBnZXRDbGVhblVSTCA9IChmdWxsVVJMOiBzdHJpbmcgPSB3aW5kb3cubG9jYXRpb24uaHJlZik6IHN0cmluZyA9PiB7XG4gIGNvbnN0IGNsZWFuVVJMID0gcXVlcnlTdHJpbmcucGFyc2VVcmwoZnVsbFVSTCkudXJsXG4gIHJldHVybiBjbGVhblVSTFxufVxuXG5leHBvcnQgY29uc3QgcGFyc2VRdWVyeSA9IChVUkw6IHN0cmluZyk6IE91dHB1dFBhcmFtcyA9PiBxdWVyeVN0cmluZy5wYXJzZShVUkwpXG5cbmV4cG9ydCBjb25zdCBidWlsZFF1ZXJ5ID0gKHBhcmFtczogT2JqZWN0KTogc3RyaW5nID0+IHF1ZXJ5U3RyaW5nLnN0cmluZ2lmeShwYXJhbXMpXG5cbmV4cG9ydCBjb25zdCBmb3JtYXREYXRlVGltZSA9IChzdHI6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IGRhdGVUaW1lID0gZm9ybWF0KHN0ciwgJ1lZWVktTU0tREQgSEg6bW06c3MnKVxuICByZXR1cm4gZGF0ZVRpbWVcbn1cblxuZXhwb3J0IGNvbnN0IG5vb3AgPSAoKSA9PiB7fVxuIl19